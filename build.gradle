import org.gradle.internal.os.OperatingSystem

plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id "application"
}

group 'com.ss.kiosk'
version '1.0.0'

sourceCompatibility = JavaVersion.VERSION_19
targetCompatibility = JavaVersion.VERSION_19

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://gitlab.com/api/v4/projects/37512056/packages/maven'
    }
}

javafx {
    version = "19"
    modules = [ 'javafx.controls' ]
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ["--enable-preview"]
}

tasks.withType(Test) {
    jvmArgs += ["--enable-preview"]
}

tasks.withType(JavaExec) {
    jvmArgs += ['--enable-preview']
}

configurations {
    developmentOnly
}

ext {
    javaFxVersion = "19"
}

dependencies {
    
    def osName = OperatingSystem.current().getName().toLowerCase()
    def targetArch = project.hasProperty('targetArch') ? project.property("targetArch") : 'x64'
    
    compileOnly "org.openjfx:javafx-graphics:$javaFxVersion:${osName}"
    compileOnly "org.openjfx:javafx-base:$javaFxVersion:${osName}"
    compileOnly "org.openjfx:javafx-media:$javaFxVersion:${osName}"

    compileOnly libs.jetbrains.annotations
    compileOnly libs.lombok

    annotationProcessor libs.lombok
    annotationProcessor libs.micronaut.inject.java
    annotationProcessor libs.micronaut.validation

    implementation libs.micronaut.inject
    implementation libs.micronaut.validation
    implementation libs.micronaut.runtime
    implementation libs.rlib.common
    implementation libs.gson
    implementation libs.slf4j.api
    implementation libs.logback.classic
    
    if (targetArch == "x64" || targetArch == "x86") {
        implementation "org.openjfx:javafx-base:$javaFxVersion:${osName}"
        implementation "org.openjfx:javafx-media:$javaFxVersion:${osName}"
        implementation "org.openjfx:javafx-graphics:$javaFxVersion:${osName}"
    }

    //compile "org.openjfx:javafx-graphics:$javaFxVersion:win"
    //compile "org.openjfx:javafx-graphics:$javaFxVersion:mac"

    testImplementation libs.junit.jupiter.api
    testImplementation libs.micronaut.test.core
    testRuntimeOnly libs.junit.jupiter.engine
}

test.classpath += configurations.developmentOnly
mainClassName = "com.ss.kiosk.Launcher"

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
    baseName = 'kiosk'
    classifier = ''
    getArchiveVersion().set('')
}

run.classpath += configurations.developmentOnly

task copyJarFile(type: Copy) {
    from file("$buildDir/libs/kiosk.jar")
    into file("$buildDir/finalDist")
}

task copyShFile(type: Copy) {
    from file("$buildDir/../kiosk.sh")
    into file("$buildDir/finalDist")
}

task copyYumFile(type: Copy) {
    from file("$rootDir/src/main/resources/application.yml")
    into file("$buildDir/finalDist")
}

task buildFinalDist(type: Zip) {
    archiveFileName = "kiosk-dist-${version}.zip"
    destinationDirectory = file("$buildDir/dist")
    from "$buildDir/finalDist"
}

task buildSingleArtifact(type: GradleBuild) {
    group = 'build'
    tasks = ['clean', 'build', 'copyJarFile', 'copyShFile', 'copyYumFile', 'buildFinalDist']
}

wrapper {
    gradleVersion = '7.6'
    distributionType = Wrapper.DistributionType.ALL
}

